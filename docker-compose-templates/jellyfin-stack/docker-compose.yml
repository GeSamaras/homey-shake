# --- Jellyfin Media Stack ---
# Remember to customize paths and potentially ports if needed!
# Create ./config and ./data directories or adjust volume paths.
# Network: Consider creating a dedicated bridge network: `docker network create media_network`
#          and adding `networks: [media_network]` to each service.

# Additional instructions and help will be added eventually.

services:
  jellyfin:
    image: lscr.io/linuxserver/jellyfin:latest
    container_name: jellyfin
    environment:
      - PUID=1000 # Your user ID `id -u`
      - PGID=1000 # Your group ID `id -g`
      - TZ=Etc/UTC # Set your timezone
      # - JELLYFIN_PublishedServerUrl=YOUR_IP_OR_DOMAIN # Optional: For remote access/apps
    volumes:
      - ./jellyfin/config:/config
      - /path/to/your/movies:/data/movies # CHANGE_ME: Point to your movie library
      - /path/to/your/tv:/data/tvshows    # CHANGE_ME: Point to your TV library
      # Add more volumes for music, photos, etc.
    ports:
      - "8096:8096" # HTTP web UI
      # - "8920:8920" # Optional: HTTPS web UI (if configured)
      # - "7359:7359/udp" # Optional: Auto Discovery
      # - "1900:1900/udp" # Optional: DLNA
    # Optional: For hardware acceleration (Intel QuickSync example)
    # devices:
    #   - /dev/dri:/dev/dri
    # Optional: For Nvidia GPU acceleration (Requires nvidia-container-toolkit)
    # deploy:
    #   resources:
    #     reservations:
    #       devices:
    #         - driver: nvidia
    #           count: 1
    #           capabilities: [gpu]
    restart: unless-stopped

  sonarr:
    image: lscr.io/linuxserver/sonarr:latest
    container_name: sonarr
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Etc/UTC
    volumes:
      - ./sonarr/config:/config
      - /path/to/your/tv:/tv # CHANGE_ME: Should match Jellyfin's TV path
      - /path/to/your/downloads:/downloads # CHANGE_ME: Point to download client's output dir
    ports:
      - "8989:8989"
    restart: unless-stopped

  radarr:
    image: lscr.io/linuxserver/radarr:latest
    container_name: radarr
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Etc/UTC
    volumes:
      - ./radarr/config:/config
      - /path/to/your/movies:/movies # CHANGE_ME: Should match Jellyfin's movie path
      - /path/to/your/downloads:/downloads # CHANGE_ME: Point to download client's output dir
    ports:
      - "7878:7878"
    restart: unless-stopped

  # Add qBittorrent, Prowlarr/Jackett, Jellyseerr similarly...
  # Example qBittorrent:
  # qbittorrent:
  #   image: lscr.io/linuxserver/qbittorrent:latest
  #   container_name: qbittorrent
  #   environment:
  #     - PUID=1000
  #     - PGID=1000
  #     - TZ=Etc/UTC
  #     - WEBUI_PORT=8080
  #   volumes:
  #     - ./qbittorrent/config:/config
  #     - /path/to/your/downloads:/downloads # CHANGE_ME
  #   ports:
  #     - "8080:8080"
  #     - "6881:6881" # TCP torrent traffic
  #     - "6881:6881/udp" # UDP torrent traffic
  #   restart: unless-stopped

# Optional shared network
# networks:
#   media_network:
#     external: true # Assumes you created it manually with `docker network create media_network`
#     # Or define it here:
#     # driver: bridge